name: terraform

on:
  pull_request:
  push:
    branches: [ "main" ]

permissions:
  id-token: write   # needed for 
  contents: read

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  TF_STATE_BUCKET: ${{ secrets.TF_STATE_BUCKET }}
  TF_STATE_TABLE: ${{ secrets.TF_STATE_TABLE }}

jobs:
  terraform:
    name: Terraform Plan/Apply
    runs-on: ubuntu-latest
    environment: prod

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Ensure backend (S3 bucket & DynamoDB) exist
        shell: bash
        run: |
          set -euxo pipefail
          # Create bucket if not exists
          if ! aws s3 ls "s3://${TF_STATE_BUCKET}" >/dev/null 2>&1; then
            aws s3api create-bucket --bucket "${TF_STATE_BUCKET}" --region "${AWS_REGION}" --create-bucket-configuration LocationConstraint="${AWS_REGION}"
            aws s3api put-bucket-encryption --bucket "${TF_STATE_BUCKET}" --server-side-encryption-configuration '{"Rules":[{"ApplyServerSideEncryptionByDefault":{"SSEAlgorithm":"AES256"}}]}'
            aws s3api put-bucket-versioning --bucket "${TF_STATE_BUCKET}" --versioning-configuration Status=Enabled
          fi
          # Create DynamoDB table if not exists
          if ! aws dynamodb describe-table --table-name "${TF_STATE_TABLE}" >/dev/null 2>&1; then
            aws dynamodb create-table --table-name "${TF_STATE_TABLE}" \
              --attribute-definitions AttributeName=LockID,AttributeType=S \
              --key-schema AttributeName=LockID,KeyType=HASH \
              --billing-mode PAY_PER_REQUEST
            aws dynamodb wait table-exists --table-name "${TF_STATE_TABLE}"
          fi

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${TF_STATE_BUCKET}" \
            -backend-config="key=terraform/devsecops-cicd/terraform.tfstate" \
            -backend-config="region=${AWS_REGION}" \
            -backend-config="dynamodb_table=${TF_STATE_TABLE}" \
            -backend-config="encrypt=true"

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -input=false

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve -input=false
        env:
          TF_VAR_key_name: ${{ secrets.TF_VAR_key_name }}
